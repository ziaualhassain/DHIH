{"ast":null,"code":"var _jsxFileName = \"/Users/ziasmac/Desktop/React/my-app/src/Components/Doctor/Doctor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport \"./Doctor.css\";\n//The Below Components are imported for the local visual pursopose \n//if you want to run for actual deployement then remove the lines of code with LP(Local Purpose) \n//If you want to run for local purpose then remove the lines of code with comment DP(Deployement Pupose)\nimport { ToastContainer } from \"react-toastify\"; //LP\nimport PatientComponent from \"../Patient/Patient\"; //LP\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst doctorsList = [{\n  name: \"Dr. John Smith\",\n  regNumber: \"1234\",\n  regYear: \"2020\",\n  smc: \"Andhra Pradesh\",\n  ethAddress: \"0x1234567890\",\n  isAccepted: null\n}, {\n  name: \"Dr. Jane Doe\",\n  regNumber: \"5678\",\n  regYear: \"2019\",\n  smc: \"Telangana\",\n  ethAddress: \"0x0987654321\",\n  isAccepted: null\n}, {\n  name: \"Dr. Michael Johnson\",\n  regNumber: \"9012\",\n  regYear: \"2022\",\n  smc: \"Arunachal Pradesh\",\n  ethAddress: \"0x6789012345\",\n  isAccepted: null\n}, {\n  name: \"Dr. John Smith\",\n  regNumber: \"1234\",\n  regYear: \"2020\",\n  smc: \"Andhra Pradesh\",\n  ethAddress: \"0x1234567890\",\n  isAccepted: null\n}, {\n  name: \"Dr. Jane Doe\",\n  regNumber: \"5678\",\n  regYear: \"2019\",\n  smc: \"Telangana\",\n  ethAddress: \"0x0987654321\",\n  isAccepted: null\n}, {\n  name: \"Dr. Michael Johnson\",\n  regNumber: \"9012\",\n  regYear: \"2022\",\n  smc: \"Arunachal Pradesh\",\n  ethAddress: \"0x6789012345\",\n  isAccepted: null\n}];\nfunction DoctorComponent() {\n  _s();\n  const [patientAddress, setPatientAddress] = useState(\"\");\n  const [patientUpdateInfo, setPatientUpdateInfo] = useState(\"\");\n  const [patientTitleUpdateInfo, setPatientTitleUpdateInfo] = useState(\"\");\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const Doctor_Address = \"0x12345678901234......567890\"; //Address of the doctor need to be retrive from the doctor unique id\n\n  const [showPopup, setShowPopup] = useState(false); //LP\n  const handleReadRequest = () => {\n    // Make read request to patient\n    setShowPopup(true);\n  };\n  const navigate = useNavigate();\n  const [doctors, setDoctors] = useState(doctorsList);\n  const handleAccept = index => {\n    const updatedDoctors = [...doctors];\n    updatedDoctors[index].status = \"Accepted\";\n    setDoctors(updatedDoctors);\n    console.log(`Status of ${updatedDoctors[index].name}: Accepted`);\n  };\n  const handleReject = index => {\n    const updatedDoctors = [...doctors];\n    updatedDoctors[index].status = \"Rejected\";\n    setDoctors(updatedDoctors);\n    console.log(`Status of ${updatedDoctors[index].name}: Rejected`);\n  };\n\n  //THE BELOW CODE IS ALL ABOUT THE PATIENT SECTION OF THE DOCTORS THAT IS RIGHT SIDE OF THE PAGE\n  //Case to handle the entered address has to be a ethereum or an NFT \n\n  const handleAddressInputChange = event => {\n    const patientAddress = event.target.value;\n    setPatientAddress(patientAddress);\n    console.log(`Patient Address is: ${patientAddress}`);\n  };\n\n  //Checking the input update info and storing it \n  const handleUpdateInputChange = event => {\n    const updateInfo = event.target.value;\n    setPatientUpdateInfo(updateInfo);\n    console.log(`Patient update info entered: ${updateInfo}`);\n  };\n\n  //Checking the title for the timeline and storing it\n  const handleTittleUpdateInputChange = event => {\n    const title = event.target.value;\n    setPatientTitleUpdateInfo(title);\n    console.log(`title is: ${title}`);\n  };\n\n  //checking the added files and storing them\n  const handleFileSelect = event => {\n    const files = event.target.files;\n    setSelectedFiles(Array.from(files));\n    console.log(`Files selected: ${files.length}`);\n    console.log(`File names: ${Array.from(files).map(file => file.name)}`);\n  };\n\n  // DP\n  // const showPopup = (type, address, callback) => {\n  //   // Show popup with request to patient with address\n  //   const message = `Doctor wants to ${type} your data. Do you accept?`;\n  //   if (window.confirm(message)) {\n  //     toast.success(`Request accepted by ${address}`);\n  //     callback();\n  //   } else {\n  //     toast.error(`Request denied by ${address}`);\n  //   }\n  // };\n\n  // Code to handle reading patient data\n  // const handleReadPermission = () => {\n  //   const addressRegex = /^0x[a-fA-F0-9]{40}$/; // Regular expression to validate Ethereum addresses\n  //   const nftAddressRegex = /^0x[0-9a-fA-F]{64}$/; // Regular expression to validate NFT addresses\n  //   if (!addressRegex.test(patientAddress) && !nftAddressRegex.test(patientAddress)) \n  //   {\n  //     toast.error(\"Invalid address format\");\n  //     return;\n  //   }\n  //   else{\n  //     //Handle for smartcontract read request\n  //     console.log('read button clicked');\n  //     // Make read request to patient with patientAddress\n  //     // Show popup and wait for response from patient\n  //     // If response is accepted, navigate to patient page\n  //     showPopup(\"read\", patientAddress, navigateToPatientPage);\n  //   }\n  // };\n\n  //code to navigate to the patient address mentioned in the inbox\n  const navigateToPatientPage = () => {\n    navigate(`/patient/${patientAddress}`);\n  };\n\n  // Code to handle writing patient data\n  const handleWritePermission = () => {\n    const addressRegex = /^0x[a-fA-F0-9]{40}$/; // Regular expression to validate Ethereum addresses\n    const nftAddressRegex = /^0x[0-9a-fA-F]{64}$/; // Regular expression to validate NFT addresses\n    if (!addressRegex.test(patientAddress) && !nftAddressRegex.test(patientAddress)) {\n      toast.error(\"Invalid address format\");\n      return;\n    } else {\n      //Handle for smartcontract updation\n      console.log('write button button clicked');\n      showPopup(\"write\", patientAddress, navigateToPatientPage);\n    }\n  };\n\n  //FUNCTION TO HANDLE THE UPDATION OF THE PATIENT DATA AND THE DETAILS OF THE UPDATION\n  const handleUpdatePatientData = () => {\n    if (!patientTitleUpdateInfo || !patientUpdateInfo) {\n      alert(\"Title and description are required!\");\n      return;\n    }\n    console.log(\"The details of the updations are :\");\n    console.log(`Title: ${patientTitleUpdateInfo}`);\n    console.log(`Description: ${patientUpdateInfo}`);\n    console.log(`Files: ${selectedFiles.map(file => file.name).join(\", \")}`);\n    console.log(`Patient Address: ${patientAddress}`);\n    alert('data updatation queued on blockchain');\n  };\n\n  //LEFT SIDE CONTENT I.E APPROVAL\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-body-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"approval-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"approval-header\",\n          children: \" Pending Requests Need Action! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"approval-timeline\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: doctor.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Registration Number: \", doctor.regNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Registration Year: \", doctor.regYear]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"SMC: \", doctor.smc]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Ethereum Address: \", doctor.ethAddress]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 13\n              }, this), doctor.status ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", doctor.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 15\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleAccept(index),\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleReject(index),\n                  children: \"Reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userdetails\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-text\",\n            children: [Doctor_Address, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-icon\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUserCircle,\n                size: \"5x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"request_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Need Someone's details?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"address-input\",\n                placeholder: \"Enter the address of the patient!\",\n                value: patientAddress,\n                onChange: handleAddressInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleReadPermission,\n                  className: \"read-button\",\n                  children: \" Read Request \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleWritePermission,\n                  className: \"write-button\",\n                  children: \" Write Request \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 17\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 107\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"update-data-input-tittle\",\n                  placeholder: \"Add a breif tittle!\",\n                  value: patientTitleUpdateInfo,\n                  onChange: handleTittleUpdateInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"update-data-input\",\n                  placeholder: \"Update with the details like medication etc..!\",\n                  value: patientUpdateInfo,\n                  onChange: handleUpdateInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-upload-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input-class\",\n                  type: \"file\",\n                  id: \"file\",\n                  multiple: true,\n                  onChange: handleFileSelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"input-label\",\n                  htmlFor: \"file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 22\n                }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selected-files-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Selected files:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 30\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: selectedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: file.name\n                    }, file.name, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"update-patient-timeline\",\n                onClick: handleUpdatePatientData,\n                children: \"Update Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorComponent, \"284mGgbuFwgesCjpi/+2uklB/pE=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorComponent;\nexport default DoctorComponent;\nvar _c;\n$RefreshReg$(_c, \"DoctorComponent\");","map":{"version":3,"names":["React","useState","useNavigate","toast","FontAwesomeIcon","faUserCircle","ToastContainer","PatientComponent","jsxDEV","_jsxDEV","doctorsList","name","regNumber","regYear","smc","ethAddress","isAccepted","DoctorComponent","_s","patientAddress","setPatientAddress","patientUpdateInfo","setPatientUpdateInfo","patientTitleUpdateInfo","setPatientTitleUpdateInfo","selectedFiles","setSelectedFiles","Doctor_Address","showPopup","setShowPopup","handleReadRequest","navigate","doctors","setDoctors","handleAccept","index","updatedDoctors","status","console","log","handleReject","handleAddressInputChange","event","target","value","handleUpdateInputChange","updateInfo","handleTittleUpdateInputChange","title","handleFileSelect","files","Array","from","length","map","file","navigateToPatientPage","handleWritePermission","addressRegex","nftAddressRegex","test","error","handleUpdatePatientData","alert","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","doctor","onClick","icon","size","type","placeholder","onChange","handleReadPermission","id","multiple","htmlFor","_c","$RefreshReg$"],"sources":["/Users/ziasmac/Desktop/React/my-app/src/Components/Doctor/Doctor.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons'\nimport \"./Doctor.css\";\n//The Below Components are imported for the local visual pursopose \n//if you want to run for actual deployement then remove the lines of code with LP(Local Purpose) \n//If you want to run for local purpose then remove the lines of code with comment DP(Deployement Pupose)\nimport { ToastContainer } from \"react-toastify\"; //LP\nimport PatientComponent from \"../Patient/Patient\"; //LP\n\nconst doctorsList = [\n  {  name: \"Dr. John Smith\", regNumber: \"1234\", regYear: \"2020\", smc: \"Andhra Pradesh\", ethAddress: \"0x1234567890\", isAccepted: null },\n  {  name: \"Dr. Jane Doe\", regNumber: \"5678\", regYear: \"2019\", smc: \"Telangana\", ethAddress: \"0x0987654321\", isAccepted: null },\n  {  name: \"Dr. Michael Johnson\", regNumber: \"9012\",regYear: \"2022\", smc: \"Arunachal Pradesh\", ethAddress: \"0x6789012345\", isAccepted: null },\n  {  name: \"Dr. John Smith\", regNumber: \"1234\", regYear: \"2020\", smc: \"Andhra Pradesh\", ethAddress: \"0x1234567890\", isAccepted: null },\n  {  name: \"Dr. Jane Doe\", regNumber: \"5678\", regYear: \"2019\", smc: \"Telangana\", ethAddress: \"0x0987654321\", isAccepted: null },\n  {  name: \"Dr. Michael Johnson\", regNumber: \"9012\",regYear: \"2022\", smc: \"Arunachal Pradesh\", ethAddress: \"0x6789012345\", isAccepted: null }\n];\n\nfunction DoctorComponent() {\n\n  const [patientAddress, setPatientAddress] = useState(\"\");\n  const [patientUpdateInfo, setPatientUpdateInfo] = useState(\"\");\n  const [patientTitleUpdateInfo, setPatientTitleUpdateInfo] = useState(\"\");\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const Doctor_Address = \"0x12345678901234......567890\"; //Address of the doctor need to be retrive from the doctor unique id\n  \n  const [showPopup, setShowPopup] = useState(false); //LP\n  const handleReadRequest = () => {\n    // Make read request to patient\n    setShowPopup(true);\n  };\n\n  \n  const navigate = useNavigate();\n\n  const [doctors, setDoctors] = useState(doctorsList);\n\n  const handleAccept = (index) => {\n    const updatedDoctors = [...doctors];\n    updatedDoctors[index].status = \"Accepted\";\n    setDoctors(updatedDoctors);\n    console.log(`Status of ${updatedDoctors[index].name}: Accepted`);\n  };\n\n  const handleReject = (index) => {\n    const updatedDoctors = [...doctors];\n    updatedDoctors[index].status = \"Rejected\";\n    setDoctors(updatedDoctors);\n    console.log(`Status of ${updatedDoctors[index].name}: Rejected`);\n  };\n\n//THE BELOW CODE IS ALL ABOUT THE PATIENT SECTION OF THE DOCTORS THAT IS RIGHT SIDE OF THE PAGE\n  //Case to handle the entered address has to be a ethereum or an NFT \n\n  const handleAddressInputChange = (event) => {\n    const patientAddress = event.target.value;\n    setPatientAddress(patientAddress);\n    console.log(`Patient Address is: ${patientAddress}`);\n  };\n  \n  \n  \n  //Checking the input update info and storing it \n  const handleUpdateInputChange = (event) => {\n    const updateInfo = event.target.value;\n    setPatientUpdateInfo(updateInfo);\n    console.log(`Patient update info entered: ${updateInfo}`);\n  };\n\n\n\n  //Checking the title for the timeline and storing it\n  const handleTittleUpdateInputChange = (event) => {\n    const title = event.target.value;\n    setPatientTitleUpdateInfo(title);\n    console.log(`title is: ${title}`);\n};\n\n\n\n//checking the added files and storing them\nconst handleFileSelect = (event) => {\n  const files = event.target.files;\n  setSelectedFiles(Array.from(files));\n  console.log(`Files selected: ${files.length}`);\n  console.log(`File names: ${Array.from(files).map(file => file.name)}`);\n};\n\n// DP\n// const showPopup = (type, address, callback) => {\n//   // Show popup with request to patient with address\n//   const message = `Doctor wants to ${type} your data. Do you accept?`;\n//   if (window.confirm(message)) {\n//     toast.success(`Request accepted by ${address}`);\n//     callback();\n//   } else {\n//     toast.error(`Request denied by ${address}`);\n//   }\n// };\n\n// Code to handle reading patient data\n// const handleReadPermission = () => {\n//   const addressRegex = /^0x[a-fA-F0-9]{40}$/; // Regular expression to validate Ethereum addresses\n//   const nftAddressRegex = /^0x[0-9a-fA-F]{64}$/; // Regular expression to validate NFT addresses\n//   if (!addressRegex.test(patientAddress) && !nftAddressRegex.test(patientAddress)) \n//   {\n//     toast.error(\"Invalid address format\");\n//     return;\n//   }\n//   else{\n//     //Handle for smartcontract read request\n//     console.log('read button clicked');\n//     // Make read request to patient with patientAddress\n//     // Show popup and wait for response from patient\n//     // If response is accepted, navigate to patient page\n//     showPopup(\"read\", patientAddress, navigateToPatientPage);\n//   }\n// };\n\n\n//code to navigate to the patient address mentioned in the inbox\nconst navigateToPatientPage = () => {\n    navigate(`/patient/${patientAddress}`);\n  };\n\n\n  // Code to handle writing patient data\n  const handleWritePermission = () => {\n    const addressRegex = /^0x[a-fA-F0-9]{40}$/; // Regular expression to validate Ethereum addresses\n    const nftAddressRegex = /^0x[0-9a-fA-F]{64}$/; // Regular expression to validate NFT addresses\n    if (!addressRegex.test(patientAddress) && !nftAddressRegex.test(patientAddress)) \n    {\n      toast.error(\"Invalid address format\");\n       return;\n    }\n  else{\n    //Handle for smartcontract updation\n    console.log('write button button clicked');\n    showPopup(\"write\", patientAddress, navigateToPatientPage);\n  }\n  };\n\n  //FUNCTION TO HANDLE THE UPDATION OF THE PATIENT DATA AND THE DETAILS OF THE UPDATION\n  const handleUpdatePatientData = () => {\n    if (!patientTitleUpdateInfo || !patientUpdateInfo) \n    {\n      alert(\"Title and description are required!\");\n      return;\n    }\n    console.log(\"The details of the updations are :\");\n    console.log(`Title: ${patientTitleUpdateInfo}`);\n    console.log(`Description: ${patientUpdateInfo}`);\n    console.log(`Files: ${selectedFiles.map(file => file.name).join(\", \")}`);\n    console.log(`Patient Address: ${patientAddress}`);\n    alert('data updatation queued on blockchain');\n  };\n\n  //LEFT SIDE CONTENT I.E APPROVAL\n\n  return (\n    <div className=\"doctor-body-container\">\n      <div className=\"doctor-container\">\n\n        {/* Timeline of the doctors approvals */}\n        <div className=\"approval-container\">\n          <div className=\"approval-header\"> Pending Requests Need Action! </div>\n          <div className=\"approval-timeline\">\n          <ul>\n        {doctors.map((doctor, index) => (\n          <li key={index}>\n            <p>\n              <strong>{doctor.name}</strong>\n            </p>\n            <p>Registration Number: {doctor.regNumber}</p>\n            <p>Registration Year: {doctor.regYear}</p>\n            <p>SMC: {doctor.smc}</p>\n            <p>Ethereum Address: {doctor.ethAddress}</p>\n            {doctor.status ? (\n              <p>Status: {doctor.status}</p>\n            ) : (\n              <div>\n                <button onClick={() => handleAccept(index)}>Accept</button>\n                <button onClick={() => handleReject(index)}>Reject</button>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n          </div>\n        </div>\n\n        {/* Profile of the patient */}\n        <div className=\"profile-container\">\n          <div className=\"userdetails\">\n          <div className=\"address-text\">{Doctor_Address}\n          <div className=\"profile-icon\">\n            <FontAwesomeIcon icon={faUserCircle} size=\"5x\" />\n          </div>\n\n          <div className=\"request_form\">\n              <p>Need Someone's details?</p>\n              <input\n                type=\"text\" className=\"address-input\"\n                placeholder=\"Enter the address of the patient!\"\n                value={patientAddress}\n                onChange={handleAddressInputChange}\n              />\n              <div className=\"button-container\">\n                <button onClick={handleReadPermission} className=\"read-button\"> Read Request </button>\n                <button onClick={handleWritePermission} className=\"write-button\"> Write Request </button> <br></br>\n                <input type=\"text\" className=\"update-data-input-tittle\"  placeholder=\"Add a breif tittle!\" value={patientTitleUpdateInfo} onChange={handleTittleUpdateInputChange} />\n                <input type=\"text\" className=\"update-data-input\" placeholder=\"Update with the details like medication etc..!\" value={patientUpdateInfo} onChange={handleUpdateInputChange} />\n              </div>\n              <div className=\"file-upload-container\">\n                     <input className=\"input-class\" type=\"file\" id=\"file\" multiple onChange={handleFileSelect} />\n                     <label className=\"input-label\" htmlFor=\"file\"></label>\n                     {selectedFiles.length > 0 && (\n                        <div className=\"selected-files-container\">\n                             <h3>Selected files:</h3>\n                                   <ul>\n                                        {selectedFiles.map((file) => (\n                                                <li key={file.name}>{file.name}</li>\n                                          ))}\n                                    </ul>\n                          </div>\n                       )}\n               </div>\n              <button className=\"update-patient-timeline\" onClick={handleUpdatePatientData}>Update Data</button>\n            </div>\n            </div>\n          </div>\n          </div>       \n        </div>\n      </div>\n  );\n}\n\nexport default DoctorComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}