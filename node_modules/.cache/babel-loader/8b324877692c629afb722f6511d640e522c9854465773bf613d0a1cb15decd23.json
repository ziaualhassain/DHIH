{"ast":null,"code":"var _jsxFileName = \"/Users/ziasmac/Desktop/React/my-app/src/Components/Doctor/Doctor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport \"./Doctor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst doctorsList = [{\n  name: \"Dr. John Smith\",\n  regNumber: \"1234\",\n  regYear: \"2020\",\n  smc: \"Andhra Pradesh\",\n  ethAddress: \"0x1234567890\",\n  isAccepted: null\n}, {\n  name: \"Dr. Jane Doe\",\n  regNumber: \"5678\",\n  regYear: \"2019\",\n  smc: \"Telangana\",\n  ethAddress: \"0x0987654321\",\n  isAccepted: null\n}, {\n  name: \"Dr. Michael Johnson\",\n  regNumber: \"9012\",\n  regYear: \"2022\",\n  smc: \"Arunachal Pradesh\",\n  ethAddress: \"0x6789012345\",\n  isAccepted: null\n}, {\n  name: \"Dr. John Smith\",\n  regNumber: \"1234\",\n  regYear: \"2020\",\n  smc: \"Andhra Pradesh\",\n  ethAddress: \"0x1234567890\",\n  isAccepted: null\n}, {\n  name: \"Dr. Jane Doe\",\n  regNumber: \"5678\",\n  regYear: \"2019\",\n  smc: \"Telangana\",\n  ethAddress: \"0x0987654321\",\n  isAccepted: null\n}, {\n  name: \"Dr. Michael Johnson\",\n  regNumber: \"9012\",\n  regYear: \"2022\",\n  smc: \"Arunachal Pradesh\",\n  ethAddress: \"0x6789012345\",\n  isAccepted: null\n}];\nfunction DoctorComponent() {\n  _s();\n  const [patientAddress, setPatientAddress] = useState(\"\");\n  const [patientUpdateInfo, setPatientUpdateInfo] = useState(\"\");\n  const [patientTitleUpdateInfo, setPatientTitleUpdateInfo] = useState(\"\");\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const Doctor_Address = \"0x12345678901234......567890\"; //Address of the doctor need to be retrive from the doctor unique id\n\n  const [doctors, setDoctors] = useState(doctorsList);\n  const handleAccept = index => {\n    const updatedDoctors = [...doctors];\n    updatedDoctors[index].status = \"Accepted\";\n    setDoctors(updatedDoctors);\n    console.log(`Status of ${updatedDoctors[index].name}: Accepted`);\n  };\n  const handleReject = index => {\n    const updatedDoctors = [...doctors];\n    updatedDoctors[index].status = \"Rejected\";\n    setDoctors(updatedDoctors);\n    console.log(`Status of ${updatedDoctors[index].name}: Rejected`);\n  };\n\n  //THE BELOW CODE IS ALL ABOUT THE PATIENT SECTION OF THE DOCTORS THAT IS RIGHT SIDE OF THE PAGE\n  //Case to handle the entered address has to be a ethereum or an NFT \n\n  const handleAddressInputChange = event => {\n    const patientAddress = event.target.value;\n    setPatientAddress(patientAddress);\n    console.log('Patient Address is ');\n  };\n\n  //Checking the input update info and storing it \n  const handleUpdateInputChange = event => {\n    const updateInfo = event.target.value;\n    setPatientUpdateInfo(updateInfo);\n    console.log(`Patient update info entered: ${updateInfo}`);\n  };\n\n  //Checking the title for the timeline and storing it\n  const handleTittleUpdateInputChange = event => {\n    const title = event.target.value;\n    setPatientTitleUpdateInfo(title);\n    console.log(`title is: ${title}`);\n  };\n\n  //checking the added files and storing them\n  const handleFileSelect = event => {\n    const files = event.target.files;\n    setSelectedFiles(Array.from(files));\n    console.log(`Files selected: ${files.length}`);\n    console.log(`File names: ${Array.from(files).map(file => file.name)}`);\n  };\n\n  // Code to handle reading patient data\n  const handleReadPermission = () => {\n    if (!setPatientAddress) {\n      alert('Address is required');\n      return;\n    }\n    alert('read button clicked');\n  };\n\n  // Code to handle writing patient data\n  const handleWritePermission = () => {\n    if (!setPatientAddress) {\n      alert('Address is required');\n      return;\n    }\n    alert('write button clicked');\n  };\n\n  //FUNCTION TO HANDLE THE UPDATION OF THE PATIENT DATA AND THE DETAILS OF THE UPDATION\n  const handleUpdatePatientData = () => {\n    if (!patientTitleUpdateInfo || !patientUpdateInfo) {\n      alert(\"Title and description are required!\");\n      return;\n    }\n    console.log(\"The details of the updations are :\");\n    console.log(`Title: ${patientTitleUpdateInfo}`);\n    console.log(`Description: ${patientUpdateInfo}`);\n    console.log(`Files: ${selectedFiles.map(file => file.name).join(\", \")}`);\n    console.log(`Patient Address: ${patientAddress}`);\n    alert('data updatation queued on blockchain');\n  };\n\n  //LEFT SIDE CONTENT I.E APPROVAL\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-body-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"approval-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"approval-header\",\n          children: \" Pending Requests Need Action! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"approval-timeline\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: doctor.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Registration Number: \", doctor.regNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Registration Year: \", doctor.regYear]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"SMC: \", doctor.smc]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Ethereum Address: \", doctor.ethAddress]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 13\n              }, this), doctor.status ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", doctor.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleAccept(index),\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleReject(index),\n                  children: \"Reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 15\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userdetails\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-text\",\n            children: [Doctor_Address, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-icon\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUserCircle,\n                size: \"5x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"request_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Need Someone's details?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"address-input\",\n                placeholder: \"Enter the address of the patient!\",\n                value: patientAddress,\n                onChange: handleAddressInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleReadPermission,\n                  className: \"read-button\",\n                  children: \" Read Request \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleWritePermission,\n                  className: \"write-button\",\n                  children: \" Write Request \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 17\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 107\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"update-data-input-tittle\",\n                  placeholder: \"Add a breif tittle!\",\n                  value: patientTitleUpdateInfo,\n                  onChange: handleTittleUpdateInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"update-data-input\",\n                  placeholder: \"Update with the details like medication etc..!\",\n                  value: patientUpdateInfo,\n                  onChange: handleUpdateInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-upload-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input-class\",\n                  type: \"file\",\n                  id: \"file\",\n                  multiple: true,\n                  onChange: handleFileSelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"input-label\",\n                  htmlFor: \"file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 22\n                }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selected-files-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Selected files:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 30\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: selectedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: file.name\n                    }, file.name, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"update-patient-timeline\",\n                onClick: handleUpdatePatientData,\n                children: \"Update Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorComponent, \"hfKzjCXFLZ9BTcyiNXrt5H8rvrU=\");\n_c = DoctorComponent;\nexport default DoctorComponent;\nvar _c;\n$RefreshReg$(_c, \"DoctorComponent\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faUserCircle","jsxDEV","_jsxDEV","doctorsList","name","regNumber","regYear","smc","ethAddress","isAccepted","DoctorComponent","_s","patientAddress","setPatientAddress","patientUpdateInfo","setPatientUpdateInfo","patientTitleUpdateInfo","setPatientTitleUpdateInfo","selectedFiles","setSelectedFiles","Doctor_Address","doctors","setDoctors","handleAccept","index","updatedDoctors","status","console","log","handleReject","handleAddressInputChange","event","target","value","handleUpdateInputChange","updateInfo","handleTittleUpdateInputChange","title","handleFileSelect","files","Array","from","length","map","file","handleReadPermission","alert","handleWritePermission","handleUpdatePatientData","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","doctor","onClick","icon","size","type","placeholder","onChange","id","multiple","htmlFor","_c","$RefreshReg$"],"sources":["/Users/ziasmac/Desktop/React/my-app/src/Components/Doctor/Doctor.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons'\nimport \"./Doctor.css\";\n\nconst doctorsList = [\n  {  name: \"Dr. John Smith\", regNumber: \"1234\", regYear: \"2020\", smc: \"Andhra Pradesh\", ethAddress: \"0x1234567890\", isAccepted: null },\n  {  name: \"Dr. Jane Doe\", regNumber: \"5678\", regYear: \"2019\", smc: \"Telangana\", ethAddress: \"0x0987654321\", isAccepted: null },\n  {  name: \"Dr. Michael Johnson\", regNumber: \"9012\",regYear: \"2022\", smc: \"Arunachal Pradesh\", ethAddress: \"0x6789012345\", isAccepted: null },\n  {  name: \"Dr. John Smith\", regNumber: \"1234\", regYear: \"2020\", smc: \"Andhra Pradesh\", ethAddress: \"0x1234567890\", isAccepted: null },\n  {  name: \"Dr. Jane Doe\", regNumber: \"5678\", regYear: \"2019\", smc: \"Telangana\", ethAddress: \"0x0987654321\", isAccepted: null },\n  {  name: \"Dr. Michael Johnson\", regNumber: \"9012\",regYear: \"2022\", smc: \"Arunachal Pradesh\", ethAddress: \"0x6789012345\", isAccepted: null }\n];\n\nfunction DoctorComponent() {\n\n  const [patientAddress, setPatientAddress] = useState(\"\");\n  const [patientUpdateInfo, setPatientUpdateInfo] = useState(\"\");\n  const [patientTitleUpdateInfo, setPatientTitleUpdateInfo] = useState(\"\");\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const Doctor_Address = \"0x12345678901234......567890\"; //Address of the doctor need to be retrive from the doctor unique id\n  \n\n  const [doctors, setDoctors] = useState(doctorsList);\n\n  const handleAccept = (index) => {\n    const updatedDoctors = [...doctors];\n    updatedDoctors[index].status = \"Accepted\";\n    setDoctors(updatedDoctors);\n    console.log(`Status of ${updatedDoctors[index].name}: Accepted`);\n  };\n\n  const handleReject = (index) => {\n    const updatedDoctors = [...doctors];\n    updatedDoctors[index].status = \"Rejected\";\n    setDoctors(updatedDoctors);\n    console.log(`Status of ${updatedDoctors[index].name}: Rejected`);\n  };\n\n//THE BELOW CODE IS ALL ABOUT THE PATIENT SECTION OF THE DOCTORS THAT IS RIGHT SIDE OF THE PAGE\n  //Case to handle the entered address has to be a ethereum or an NFT \n\n  const handleAddressInputChange = (event) => {\n    const patientAddress = event.target.value;\n    setPatientAddress(patientAddress);\n    console.log('Patient Address is ')\n  };\n  \n  \n  \n  //Checking the input update info and storing it \n  const handleUpdateInputChange = (event) => {\n    const updateInfo = event.target.value;\n    setPatientUpdateInfo(updateInfo);\n    console.log(`Patient update info entered: ${updateInfo}`);\n  };\n\n\n\n  //Checking the title for the timeline and storing it\n  const handleTittleUpdateInputChange = (event) => {\n    const title = event.target.value;\n    setPatientTitleUpdateInfo(title);\n    console.log(`title is: ${title}`);\n};\n\n\n\n//checking the added files and storing them\nconst handleFileSelect = (event) => {\n  const files = event.target.files;\n  setSelectedFiles(Array.from(files));\n  console.log(`Files selected: ${files.length}`);\n  console.log(`File names: ${Array.from(files).map(file => file.name)}`);\n};\n\n\n\n// Code to handle reading patient data\n  const handleReadPermission = () => {\n    if(!setPatientAddress){\n      alert('Address is required');\n      return;\n    }\n    alert('read button clicked');\n  };\n\n  // Code to handle writing patient data\n  const handleWritePermission = () => {\n    if(!setPatientAddress){\n      alert('Address is required');\n      return;\n    }\n    alert('write button clicked');\n  };\n\n  //FUNCTION TO HANDLE THE UPDATION OF THE PATIENT DATA AND THE DETAILS OF THE UPDATION\n  const handleUpdatePatientData = () => {\n    if (!patientTitleUpdateInfo || !patientUpdateInfo) \n    {\n      alert(\"Title and description are required!\");\n      return;\n    }\n    console.log(\"The details of the updations are :\");\n    console.log(`Title: ${patientTitleUpdateInfo}`);\n    console.log(`Description: ${patientUpdateInfo}`);\n    console.log(`Files: ${selectedFiles.map(file => file.name).join(\", \")}`);\n    console.log(`Patient Address: ${patientAddress}`);\n    alert('data updatation queued on blockchain');\n  };\n\n  //LEFT SIDE CONTENT I.E APPROVAL\n\n  return (\n    <div className=\"doctor-body-container\">\n      <div className=\"doctor-container\">\n\n        {/* Timeline of the doctors approvals */}\n        <div className=\"approval-container\">\n          <div className=\"approval-header\"> Pending Requests Need Action! </div>\n          <div className=\"approval-timeline\">\n          <ul>\n        {doctors.map((doctor, index) => (\n          <li key={index}>\n            <p>\n              <strong>{doctor.name}</strong>\n            </p>\n            <p>Registration Number: {doctor.regNumber}</p>\n            <p>Registration Year: {doctor.regYear}</p>\n            <p>SMC: {doctor.smc}</p>\n            <p>Ethereum Address: {doctor.ethAddress}</p>\n            {doctor.status ? (\n              <p>Status: {doctor.status}</p>\n            ) : (\n              <div>\n                <button onClick={() => handleAccept(index)}>Accept</button>\n                <button onClick={() => handleReject(index)}>Reject</button>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n          </div>\n        </div>\n\n        {/* Profile of the patient */}\n        <div className=\"profile-container\">\n          <div className=\"userdetails\">\n          <div className=\"address-text\">{Doctor_Address}\n          <div className=\"profile-icon\">\n            <FontAwesomeIcon icon={faUserCircle} size=\"5x\" />\n          </div>\n\n          <div className=\"request_form\">\n              <p>Need Someone's details?</p>\n              <input\n                type=\"text\" className=\"address-input\"\n                placeholder=\"Enter the address of the patient!\"\n                value={patientAddress}\n                onChange={handleAddressInputChange}\n              />\n              <div className=\"button-container\">\n                <button onClick={handleReadPermission} className=\"read-button\"> Read Request </button>\n                <button onClick={handleWritePermission} className=\"write-button\"> Write Request </button> <br></br>\n                <input type=\"text\" className=\"update-data-input-tittle\"  placeholder=\"Add a breif tittle!\" value={patientTitleUpdateInfo} onChange={handleTittleUpdateInputChange} />\n                <input type=\"text\" className=\"update-data-input\" placeholder=\"Update with the details like medication etc..!\" value={patientUpdateInfo} onChange={handleUpdateInputChange} />\n              </div>\n              <div className=\"file-upload-container\">\n                     <input className=\"input-class\" type=\"file\" id=\"file\" multiple onChange={handleFileSelect} />\n                     <label className=\"input-label\" htmlFor=\"file\"></label>\n                     {selectedFiles.length > 0 && (\n                        <div className=\"selected-files-container\">\n                             <h3>Selected files:</h3>\n                                   <ul>\n                                        {selectedFiles.map((file) => (\n                                                <li key={file.name}>{file.name}</li>\n                                          ))}\n                                    </ul>\n                          </div>\n                       )}\n               </div>\n              <button className=\"update-patient-timeline\" onClick={handleUpdatePatientData}>Update Data</button>\n            </div>\n            </div>\n          </div>\n          </div>       \n        </div>\n      </div>\n  );\n}\n\nexport default DoctorComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}