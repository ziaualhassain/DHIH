[{"/Users/ziasmac/Desktop/React/my-app/src/index.js":"1","/Users/ziasmac/Desktop/React/my-app/src/App.js":"2","/Users/ziasmac/Desktop/React/my-app/src/reportWebVitals.js":"3","/Users/ziasmac/Desktop/React/my-app/src/Components/Navbar/Navbar.js":"4","/Users/ziasmac/Desktop/React/my-app/src/Components/Home/Home.js":"5","/Users/ziasmac/Desktop/React/my-app/src/Components/Footer/Footer.js":"6","/Users/ziasmac/Desktop/React/my-app/src/Components/Authentication/Authentication.js":"7","/Users/ziasmac/Desktop/React/my-app/src/Components/Doctor/Doctor.js":"8","/Users/ziasmac/Desktop/React/my-app/src/Components/Patient/Patient.js":"9","/Users/ziasmac/Desktop/React/my-app/src/Components/AboutProject/AboutProject.js":"10","/Users/ziasmac/Desktop/React/my-app/src/Components/AboutProject/AboutElements.js":"11","/Users/ziasmac/Documents/React-Major-Pro/src/index.js":"12","/Users/ziasmac/Documents/React-Major-Pro/src/reportWebVitals.js":"13","/Users/ziasmac/Documents/React-Major-Pro/src/App.js":"14","/Users/ziasmac/Documents/React-Major-Pro/src/Components/Footer/Footer.js":"15","/Users/ziasmac/Documents/React-Major-Pro/src/Components/Navbar/Navbar.js":"16","/Users/ziasmac/Documents/React-Major-Pro/src/Components/Home/Home.js":"17","/Users/ziasmac/Documents/React-Major-Pro/src/Components/Authentication/Authentication.js":"18","/Users/ziasmac/Documents/React-Major-Pro/src/Components/AboutProject/AboutProject.js":"19","/Users/ziasmac/Documents/React-Major-Pro/src/Components/Patient/Patient.js":"20","/Users/ziasmac/Documents/React-Major-Pro/src/Components/Doctor/Doctor.js":"21","/Users/ziasmac/Documents/React-Major-Pro/src/Components/AboutProject/AboutElements.js":"22"},{"size":535,"mtime":1679672336102,"results":"23","hashOfConfig":"24"},{"size":1803,"mtime":1679986527468,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1679672336102,"results":"26","hashOfConfig":"24"},{"size":571,"mtime":1679986246868,"results":"27","hashOfConfig":"24"},{"size":709,"mtime":1679987811121,"results":"28","hashOfConfig":"24"},{"size":224,"mtime":1679824250389,"results":"29","hashOfConfig":"24"},{"size":8205,"mtime":1679993925165,"results":"30","hashOfConfig":"24"},{"size":9483,"mtime":1679903356767,"results":"31","hashOfConfig":"24"},{"size":5180,"mtime":1679980941442,"results":"32","hashOfConfig":"24"},{"size":1437,"mtime":1679986380304,"results":"33","hashOfConfig":"24"},{"size":1632,"mtime":1679984510369,"results":"34","hashOfConfig":"24"},{"size":535,"mtime":1679672336102,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1679672336102,"results":"37","hashOfConfig":"36"},{"size":1803,"mtime":1679986527468,"results":"38","hashOfConfig":"36"},{"size":224,"mtime":1679824250389,"results":"39","hashOfConfig":"36"},{"size":571,"mtime":1679986246868,"results":"40","hashOfConfig":"36"},{"size":709,"mtime":1679987811121,"results":"41","hashOfConfig":"36"},{"size":8205,"mtime":1679993925165,"results":"42","hashOfConfig":"36"},{"size":1437,"mtime":1679986380304,"results":"43","hashOfConfig":"36"},{"size":5180,"mtime":1679980941442,"results":"44","hashOfConfig":"36"},{"size":9483,"mtime":1679903356767,"results":"45","hashOfConfig":"36"},{"size":1632,"mtime":1679984510369,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1bytqie",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1keszuj",{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ziasmac/Desktop/React/my-app/src/index.js",[],[],[],"/Users/ziasmac/Desktop/React/my-app/src/App.js",[],[],"/Users/ziasmac/Desktop/React/my-app/src/reportWebVitals.js",[],[],"/Users/ziasmac/Desktop/React/my-app/src/Components/Navbar/Navbar.js",["115","116"],[],"/Users/ziasmac/Desktop/React/my-app/src/Components/Home/Home.js",[],[],"/Users/ziasmac/Desktop/React/my-app/src/Components/Footer/Footer.js",[],[],"/Users/ziasmac/Desktop/React/my-app/src/Components/Authentication/Authentication.js",["117"],[],"/Users/ziasmac/Desktop/React/my-app/src/Components/Doctor/Doctor.js",["118"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons'\nimport \"./Doctor.css\";\nimport PatientComponent from \"../Patient/Patient\";\n\nconst doctorsList = [\n  {  name: \"Dr. Varun\", regNumber: \"1234\", regYear: \"2020\", smc: \"Andhra Pradesh\", ethAddress: \"0x1234567890\", isAccepted: null },\n  {  name: \"Dr. Bali\", regNumber: \"5678\", regYear: \"2019\", smc: \"Telangana\", ethAddress: \"0x0987654321\", isAccepted: null },\n  {  name: \"Dr. Michael Johnson\", regNumber: \"9012\",regYear: \"2022\", smc: \"Arunachal Pradesh\", ethAddress: \"0x6789012345\", isAccepted: null },\n  {  name: \"Dr. John Smith\", regNumber: \"1234\", regYear: \"2020\", smc: \"Andhra Pradesh\", ethAddress: \"0x1234567890\", isAccepted: null },\n  {  name: \"Dr. Jane Doe\", regNumber: \"5678\", regYear: \"2019\", smc: \"Telangana\", ethAddress: \"0x0987654321\", isAccepted: null },\n  {  name: \"Dr. Michael Johnson\", regNumber: \"9012\",regYear: \"2022\", smc: \"Arunachal Pradesh\", ethAddress: \"0x6789012345\", isAccepted: null }\n];\n\nfunction DoctorComponent() {\n\n  const [patientAddress, setPatientAddress] = useState(\"\");\n  const [patientUpdateInfo, setPatientUpdateInfo] = useState(\"\");\n  const [patientTitleUpdateInfo, setPatientTitleUpdateInfo] = useState(\"\");\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const Doctor_Address = \"0x12345678901234......567890\"; //Address of the doctor need to be retrive from the doctor unique id\n  \n  const navigate = useNavigate();\n\n  const [doctors, setDoctors] = useState(doctorsList);\n\n  const handleAccept = (index) => {\n    const updatedDoctors = [...doctors];\n    updatedDoctors[index].status = \"Accepted\";\n    setDoctors(updatedDoctors);\n    console.log(`Status of ${updatedDoctors[index].name}: Accepted`);\n  };\n\n  const handleReject = (index) => {\n    const updatedDoctors = [...doctors];\n    updatedDoctors[index].status = \"Rejected\";\n    setDoctors(updatedDoctors);\n    console.log(`Status of ${updatedDoctors[index].name}: Rejected`);\n  };\n\n//THE BELOW CODE IS ALL ABOUT THE PATIENT SECTION OF THE DOCTORS THAT IS RIGHT SIDE OF THE PAGE\n  //Case to handle the entered address has to be a ethereum or an NFT \n\n  const handleAddressInputChange = (event) => {\n    const patientAddress = event.target.value;\n    setPatientAddress(patientAddress);\n    console.log(`Patient Address is: ${patientAddress}`);\n  };\n  \n  \n  \n  //Checking the input update info and storing it \n  const handleUpdateInputChange = (event) => {\n    const updateInfo = event.target.value;\n    setPatientUpdateInfo(updateInfo);\n    console.log(`Patient update info entered: ${updateInfo}`);\n  };\n\n\n\n  //Checking the title for the timeline and storing it\n  const handleTittleUpdateInputChange = (event) => {\n    const title = event.target.value;\n    setPatientTitleUpdateInfo(title);\n    console.log(`title is: ${title}`);\n};\n\n\n\n//checking the added files and storing them\nconst handleFileSelect = (event) => {\n  const files = event.target.files;\n  setSelectedFiles(Array.from(files));\n  console.log(`Files selected: ${files.length}`);\n  console.log(`File names: ${Array.from(files).map(file => file.name)}`);\n};\n\nconst showPopup = (type, address, callback) => {\n  // Show popup with request to patient with address\n  const message = `Doctor wants to ${type} your data. Do you accept?`;\n  if (window.confirm(message)) {\n    toast.success(`Request accepted by ${address}`);\n    callback();\n  } else {\n    toast.error(`Request denied by ${address}`);\n  }\n};\n\n// Code to handle reading patient data\nconst handleReadPermission = () => {\n  const addressRegex = /^0x[a-fA-F0-9]{40}$/; // Regular expression to validate Ethereum addresses\n  const nftAddressRegex = /^0x[0-9a-fA-F]{64}$/; // Regular expression to validate NFT addresses\n  if (!addressRegex.test(patientAddress) && !nftAddressRegex.test(patientAddress)) \n  {\n    toast.error(\"Invalid address format\");\n    return;\n  }\n  else{\n    //Handle for smartcontract read request\n    console.log('read button clicked');\n    // Make read request to patient with patientAddress\n    // Show popup and wait for response from patient\n    // If response is accepted, navigate to patient page\n    showPopup(\"read\", patientAddress, navigateToPatientPage);\n  }\n};\n\n\n//code to navigate to the patient address mentioned in the inbox\nconst navigateToPatientPage = () => {\n    //navigate(`/Patient/${patientAddress}`);\n    console.log(\"Navigation Function\");\n    navigate(\"/patient\"); //for local verification i'm using this normal redirect through navigation\n  };\n\nconst navigateToDataUpdationPage = () => {\n   console.log(\"Data updation called so it should be in the doctor page only\");\n   navigate(\"/doctor\");\n}\n\n\n  // Code to handle writing patient data\n  const handleWritePermission = () => {\n    const addressRegex = /^0x[a-fA-F0-9]{40}$/; // Regular expression to validate Ethereum addresses\n    const nftAddressRegex = /^0x[0-9a-fA-F]{64}$/; // Regular expression to validate NFT addresses\n    if (!addressRegex.test(patientAddress) && !nftAddressRegex.test(patientAddress)) \n    {\n      toast.error(\"Invalid address format\");\n       return;\n    }\n  else{\n    //Handle for smartcontract updation\n    console.log('write button button clicked');\n    showPopup(\"write\", patientAddress, navigateToDataUpdationPage);\n  }\n  };\n\n  //FUNCTION TO HANDLE THE UPDATION OF THE PATIENT DATA AND THE DETAILS OF THE UPDATION\n  const handleUpdatePatientData = () => {\n    if (!patientTitleUpdateInfo || !patientUpdateInfo) \n    {\n      alert(\"Title and description are required!\");\n      return;\n    }\n    console.log(\"The details of the updations are :\");\n    console.log(`Title: ${patientTitleUpdateInfo}`);\n    console.log(`Description: ${patientUpdateInfo}`);\n    console.log(`Files: ${selectedFiles.map(file => file.name).join(\", \")}`);\n    console.log(`Patient Address: ${patientAddress}`);\n    alert('data updatation queued on blockchain');\n  };\n\n  //LEFT SIDE CONTENT I.E APPROVAL\n\n  return (\n    <div className=\"doctor-body-container\">\n      <div className=\"doctor-container\">\n\n        {/* Timeline of the doctors approvals */}\n        <div className=\"approval-container\">\n          <div className=\"approval-header\"> Pending Requests Need Action! </div>\n          <div className=\"approval-timeline\">\n          <ul>\n        {doctors.map((doctor, index) => (\n          <li key={index}>\n            <p>\n              <strong>{doctor.name}</strong>\n            </p>\n            <p>Registration Number: {doctor.regNumber}</p>\n            <p>Registration Year: {doctor.regYear}</p>\n            <p>SMC: {doctor.smc}</p>\n            <p>Ethereum Address: {doctor.ethAddress}</p>\n            {doctor.status ? (\n              <p>Status: {doctor.status}</p>\n            ) : (\n              <div>\n                <button onClick={() => handleAccept(index)}>Accept</button>\n                <button onClick={() => handleReject(index)}>Reject</button>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n          </div>\n        </div>\n\n        {/* Profile of the patient */}\n        <div className=\"profile-container\">\n          <div className=\"userdetails\">\n          <div className=\"address-text\">{Doctor_Address}\n          <div className=\"profile-icon\">\n            <FontAwesomeIcon icon={faUserCircle} size=\"5x\" />\n          </div>\n\n          <div className=\"request_form\">\n              <p>Need Someone's details?</p>\n              <input\n                type=\"text\" className=\"address-input\"\n                placeholder=\"Enter the address of the patient!\"\n                value={patientAddress}\n                onChange={handleAddressInputChange}\n              />\n              <div className=\"button-container\">\n                <button onClick={handleReadPermission} className=\"read-button\"> Read Request </button>\n                <button onClick={handleWritePermission} className=\"write-button\"> Write Request </button> <br></br>\n                <input type=\"text\" className=\"update-data-input-tittle\"  placeholder=\"Add a breif tittle!\" value={patientTitleUpdateInfo} onChange={handleTittleUpdateInputChange} />\n                <input type=\"text\" className=\"update-data-input\" placeholder=\"Update with the details like medication etc..!\" value={patientUpdateInfo} onChange={handleUpdateInputChange} />\n              </div>\n              <div className=\"file-upload-container\">\n                     <input className=\"input-class\" type=\"file\" id=\"file\" multiple onChange={handleFileSelect} />\n                     <label className=\"input-label\" htmlFor=\"file\"></label>\n                     {selectedFiles.length > 0 && (\n                        <div className=\"selected-files-container\">\n                             <h3>Selected files:</h3>\n                                   <ul>\n                                        {selectedFiles.map((file) => (\n                                                <li key={file.name}>{file.name}</li>\n                                          ))}\n                                    </ul>\n                          </div>\n                       )}\n               </div>\n              <button className=\"update-patient-timeline\" onClick={handleUpdatePatientData}>Update Data</button>\n            </div>\n            </div>\n          </div>\n          </div>       \n        </div>\n      </div>\n  );\n}\n\nexport default DoctorComponent;\n\n","/Users/ziasmac/Desktop/React/my-app/src/Components/Patient/Patient.js",[],[],"/Users/ziasmac/Desktop/React/my-app/src/Components/AboutProject/AboutProject.js",[],[],"/Users/ziasmac/Desktop/React/my-app/src/Components/AboutProject/AboutElements.js",[],[],"/Users/ziasmac/Documents/React-Major-Pro/src/index.js",[],[],"/Users/ziasmac/Documents/React-Major-Pro/src/reportWebVitals.js",[],[],"/Users/ziasmac/Documents/React-Major-Pro/src/App.js",[],[],"/Users/ziasmac/Documents/React-Major-Pro/src/Components/Footer/Footer.js",[],[],"/Users/ziasmac/Documents/React-Major-Pro/src/Components/Navbar/Navbar.js",["119","120"],[],"/Users/ziasmac/Documents/React-Major-Pro/src/Components/Home/Home.js",[],[],"/Users/ziasmac/Documents/React-Major-Pro/src/Components/Authentication/Authentication.js",["121"],[],"/Users/ziasmac/Documents/React-Major-Pro/src/Components/AboutProject/AboutProject.js",[],[],"/Users/ziasmac/Documents/React-Major-Pro/src/Components/Patient/Patient.js",[],[],"/Users/ziasmac/Documents/React-Major-Pro/src/Components/Doctor/Doctor.js",["122"],[],"/Users/ziasmac/Documents/React-Major-Pro/src/Components/AboutProject/AboutElements.js",[],[],{"ruleId":"123","severity":1,"message":"124","line":16,"column":15,"nodeType":"125","endLine":16,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":19,"column":15,"nodeType":"125","endLine":19,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":24},{"ruleId":"126","severity":1,"message":"127","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":16,"column":15,"nodeType":"125","endLine":16,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":19,"column":15,"nodeType":"125","endLine":19,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":24},{"ruleId":"126","severity":1,"message":"127","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":24},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'PatientComponent' is defined but never used.","Identifier","unusedVar"]